generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String               @id @default(cuid())
  walletAddress String               @unique
  name          String?
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  multisigs     Multisig[]
  notifications NotificationSetting?
}

model Multisig {
  id           String            @id @default(cuid())
  userId       String
  chainId      Int
  address      String
  name         String?
  enabled      Boolean           @default(true)
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  user         User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions SeenTransaction[]

  @@unique([userId, chainId, address])
  @@index([userId])
  @@index([enabled])
}

model NotificationSetting {
  id               String   @id @default(cuid())
  userId           String   @unique
  telegramBotToken String?
  telegramChatId   String?
  enabled          Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model SeenTransaction {
  id            String   @id @default(cuid())
  multisigId    String
  safeTxHash    String
  firstSeen     DateTime @default(now())
  lastChecked   DateTime @default(now())
  confirmations Int      @default(0)
  threshold     Int
  notified      Boolean  @default(false)
  multisig      Multisig @relation(fields: [multisigId], references: [id], onDelete: Cascade)

  @@unique([multisigId, safeTxHash])
  @@index([multisigId])
  @@index([safeTxHash])
}
