// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User model for thirdweb SIWE authentication
model User {
  id            String    @id @default(cuid())
  walletAddress String    @unique // Ethereum wallet address
  name          String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relations
  multisigs     Multisig[]
  notifications NotificationSetting[]
}

// Multisig configuration model
model Multisig {
  id          String    @id @default(cuid())
  userId      String
  chainId     Int
  address     String
  name        String?   // Optional friendly name
  enabled     Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions SeenTransaction[]
  
  // Ensure unique multisig per user
  @@unique([userId, chainId, address])
  @@index([userId])
  @@index([enabled])
}

// Notification settings for each user
model NotificationSetting {
  id              String    @id @default(cuid())
  userId          String    @unique
  telegramBotToken String?
  telegramChatId  String?
  enabled         Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relations
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}

// Seen transactions tracking per multisig
model SeenTransaction {
  id            String    @id @default(cuid())
  multisigId    String
  safeTxHash    String
  firstSeen     DateTime  @default(now())
  lastChecked   DateTime  @default(now())
  confirmations Int       @default(0)
  threshold     Int
  notified      Boolean   @default(false)
  
  // Relations
  multisig      Multisig  @relation(fields: [multisigId], references: [id], onDelete: Cascade)
  
  // Ensure unique transaction per multisig
  @@unique([multisigId, safeTxHash])
  @@index([multisigId])
  @@index([safeTxHash])
}

